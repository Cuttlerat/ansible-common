---
- name: Install dependencies
  package:
    name: "{{ item }}"
  with_items:
    - python-pip
    - python-setuptools

- name: Install pip dependencies
  pip:
    name: "{{ item }}"
  with_items:
    - "docker-py=={{ docker_py_version }}"

- name: Check docker is not installed
  command: which docker
  ignore_errors: yes
  register: docker_status

- name: Download docker installer
  get_url:
      url: https://get.docker.com
      dest: /tmp/docker_install.sh
      mode: 0700
      owner: root
  when: docker_status.rc == 1

- name: Install docker
  command: sh /tmp/docker_install.sh
  when: docker_status.rc == 1

  #- name: Add gpg key
  #  apt_key:
  #    keyserver: hkp://ha.pool.sks-keyservers.net:80
  #    id: 58118E89F3A912897C070ADBF76221572C52609D
  #  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and docker_status.rc == 1
  #
  #- name: Add apt repository
  #  apt_repository:
  #    repo: "deb https://apt.dockerproject.org/repo ubuntu-{{ ansible_distribution_release }} main"
  #    update_cache: yes
  #  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and docker_status.rc == 1
  #
  #- name: Install docker on ubuntu/debian
  #  apt:
  #    name: docker-engine
  #    install_recommends: no
  #  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and docker_status.rc == 1
  #
  #- name: Install docker on centos/rhel
  #  yum: name=docker-ce state=latest
  #  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux') and docker_status.rc == 1

- name: Make sure docker is running
  service:
      name: docker
      state: started

- name: Add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
  append: yes

- name: Delete docker installer
  file:
      path: /tmp/docker_install.sh
      state: absent
